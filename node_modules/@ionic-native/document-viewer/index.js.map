{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/document-viewer/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;IA8DP,kCAAiB;;;;IAEnD;;;;OAIG;;;;;;IAEH,uCAAc;;;;;kBAAmB,MAAM,CAAC,EAAE;IAE1C;;;;;;;;;;OAUG;;;;;;;;;;;;IAEH,wCAAe;;;;;;;;;;;cAAC,GAAW,EAAE,WAAmB,EAAE,OAA8B,EAAE,UAAqB,EAAE,YAAuB,EAAE,YAAuB,EAAE,OAAkB,KAAW;IAExL;;;;;;;;;;OAUG;;;;;;;;;;;;IAEH,qCAAY;;;;;;;;;;;cAAC,GAAW,EAAE,WAAmB,EAAE,OAA8B,EAAE,MAAiB,EAAE,OAAkB,EAAE,YAAuB,EAAE,OAAkB,KAAW;;gBArC7K,UAAU;;;QAQR,OAAO,EAAE;;;;wDACgC;;QAazC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;iEACuE,QAAQ,EAAiB,QAAQ,EAAiB,QAAQ,EAAY,QAAQ;;yDAAW;;QAavL,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;iEACgE,QAAQ,EAAY,QAAQ,EAAiB,QAAQ,EAAY,QAAQ;;sDAAW;;;;;;;;;;;;;;;;;;;;;;;;;IApCjK,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,iBAAiB;YAC7B,MAAM,EAAE,gCAAgC;YACxC,SAAS,EAAE,0BAA0B;YACrC,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;OAEW,cAAc,EAsC1B;yBArGD;EA+DoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\nexport interface DocumentViewerOptions {\n  title?: string;\n  documentView?: {\n    closeLabel: string;\n  };\n  navigationView?: {\n    closeLabel: string;\n  };\n  email?: {\n    enabled: boolean;\n  };\n  print?: {\n    enabled: boolean;\n  };\n  openWith?: {\n    enabled: boolean;\n  };\n  bookmarks?: {\n    enabled: boolean;\n  };\n  search?: {\n    enabled: boolean;\n  };\n  autoClose?: {\n    onPause: boolean;\n  };\n}\n\n/**\n * @name Document Viewer\n * @description\n * This plugin offers a slim API to view PDF files which are either stored in the apps assets folder (/www/*) or in any other file system directory available via the cordova file plugin.\n *\n * @usage\n * ```typescript\n * import { DocumentViewer } from '@ionic-native/document-viewer';\n *\n *\n * constructor(private document: DocumentViewer) { }\n *\n * ...\n * const options: DocumentViewerOptions = {\n *   title: 'My PDF'\n * }\n *\n * this.document.viewDocument('assets/myFile.pdf', 'application/pdf', options)\n *\n * ```\n *\n * @interfaces\n * DocumentViewerOptions\n */\n@Plugin({\n  pluginName: 'Document Viewer',\n  plugin: 'cordova-plugin-document-viewer',\n  pluginRef: 'SitewaertsDocumentViewer',\n  repo: 'https://github.com/sitewaerts/cordova-plugin-document-viewer',\n  platforms: ['Android', 'iOS', 'Windows']\n})\n@Injectable()\nexport class DocumentViewer extends IonicNativePlugin {\n\n  /**\n   * Displays the email composer pre-filled with data.\n   *\n   * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n   */\n  @Cordova()\n  getSupportInfo(): Promise<any> { return; }\n\n  /**\n   * Check if the document can be shown\n   *\n   * @param url {string} Url to the file\n   * @param contentType {string} Content type of the file\n   * @param options {Array<DocumentViewerOptions>} options\n   * @param [onPossible] {Function}\n   * @param [onMissingApp] {Function}\n   * @param [onImpossible] {Function}\n   * @param [onError] {Function}\n   */\n  @Cordova({ sync: true })\n  canViewDocument(url: string, contentType: string, options: DocumentViewerOptions, onPossible?: Function, onMissingApp?: Function, onImpossible?: Function, onError?: Function): void { }\n\n  /**\n   * Opens the file\n   *\n   * @param url {string} Url to the file\n   * @param contentType {string} Content type of the file\n   * @param options {DocumentViewerOptions} options\n   * @param [onShow] {Function}\n   * @param [onClose] {Function}\n   * @param [onMissingApp] {Function}\n   * @param [onError] {Function}\n   */\n  @Cordova({ sync: true })\n  viewDocument(url: string, contentType: string, options: DocumentViewerOptions, onShow?: Function, onClose?: Function, onMissingApp?: Function, onError?: Function): void { }\n\n}\n"]}